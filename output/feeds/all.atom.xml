<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Aiyana Brooks</title><link href="https://aiyanabrooks.com/" rel="alternate"></link><link href="https://aiyanabrooks.com/feeds/all.atom.xml" rel="self"></link><id>https://aiyanabrooks.com/</id><updated>2019-10-31T09:20:00-04:00</updated><entry><title>SPELL Attendance Tracker</title><link href="https://aiyanabrooks.com/attendance-tracker.html" rel="alternate"></link><published>2019-10-31T09:20:00-04:00</published><updated>2019-10-31T09:20:00-04:00</updated><author><name>Aiyana</name></author><id>tag:aiyanabrooks.com,2019-10-31:/attendance-tracker.html</id><summary type="html">&lt;p class="first last"&gt;This was my first attempt at creating a Flask application. The goal was to create an online attendance tracking tool that could be used by teachers to store and monitor student attendance.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;For a while I was teaching English at a community program called SPELL.
The program required us to turn in paper attendance sheets each week.
For my first Flask project, I wanted to create an online attendance tool for
teachers to more easily track and turn in their attendance. I used Bootstrap for
the UI and mysql for the database. After completing the initial screens,
I decided to refactor the project and start again (see &lt;a class="reference internal" href="#take-2"&gt;Take 2&lt;/a&gt;). Both versions of the code
are written in Python 2.7 which has since been deprecated. This code never went live,
but it was a good learning experience.&lt;/p&gt;
&lt;div class="section" id="take-1"&gt;
&lt;h2&gt;Take 1&lt;/h2&gt;
&lt;p&gt;This code lives in a &lt;a class="reference external" href="https://bitbucket.org/ariesunique/speller/src/master/"&gt;Bitbucket repository&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/index - This is the index/ Welcome page&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="Index page" src="../images/Spell-index.png" /&gt;
&lt;p&gt;&lt;strong&gt;/register - Enable users to register&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="Register page" src="../images/Spell-register.png" /&gt;
&lt;p&gt;&lt;strong&gt;/login - Standard Login Page&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="Login page" src="../images/Spell-login.png" /&gt;
&lt;p&gt;&lt;strong&gt;/login - After a new user registers, he is redirected to the login page.&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="Login page after redirect" src="../images/Spell-login-redirect.png" /&gt;
&lt;p&gt;&lt;strong&gt;/dashboard - There was supposed to be more to this screen, but I decided to refactor
the project and start from scratch.&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="Empty Dashboard page" src="../images/Spell-dashboard.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="take-2"&gt;
&lt;h2&gt;Take 2&lt;/h2&gt;
&lt;p&gt;This code lives in a BitBucket repository called &lt;a class="reference external" href="https://bitbucket.org/ariesunique/spelldemo/src"&gt;SpellDemo&lt;/a&gt;
For this second attempt, I used a different Bootstrap theme that was less bright, and I simplified the
code base. In the first attempt, I had tried to use blueprints and the codebase became confusing. This second trial,
I decided it was better to start simple, and refactor later, if needed.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;/login - Standard Login Page&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="Standard Login page" src="../images/spelldemo-login.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;/logout redirects back to the Login page with a message to the user that he has successfully logged out&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="Login page after redirect from logout" src="../images/spelldemo-logout-redirect.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;/dashboard - Admin dashboard&lt;/strong&gt;
SPELL is a community program that recurs twice each year for 12 weeks each semester.
The idea behind this screen is that the administrator of the program would set the current
semester of the program (ie, Winter 2016, Fall 2016), and enter the names of enrolled
students and assign them to classes.&lt;/p&gt;
&lt;img alt="Admin Dashboard" src="../images/spelldemo-admin-dashboard.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;/attendance - Morning attendance tab&lt;/strong&gt;
Teachers in SPELL teach two classes - one in the morning and one in the afternoon.
This attendance page enables teachers to enter attendance for both their classes.
The page uses javascript and Bootstrap to provide a tab navigation so teacher can easily
toggle between morning and afternoon attendance for that day. The teacher chooses
a date first and is shown a list of all the students in his morning and afternoon classes.
The teacher can use the radio buttons to mark the attendance accordingly, and optionally
can enter a comment.&lt;/p&gt;
&lt;img alt="Morning attendance page" src="../images/spelldemo-attendance-morning.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;/attendance - Afternoon attendance tab&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="Afternoon attendance page" src="../images/spelldemo-attendance-afternoon.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;/students - List of students in this teacher's class&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="Student list page" src="../images/spelldemo-students-list.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;/student/add - Add student&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="Add student page" src="../images/spelldemo-students-add.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;/student/edit/{id} - Edit student&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="Edit student page" src="../images/spelldemo-students-edit.png" /&gt;
&lt;/div&gt;
</content><category term="blog"></category><category term="projects"></category><category term="flask"></category></entry><entry><title>Stock Tracker</title><link href="https://aiyanabrooks.com/stock-tracker.html" rel="alternate"></link><published>2019-04-04T08:21:00-04:00</published><updated>2019-04-04T08:21:00-04:00</updated><author><name>Aiyana</name></author><id>tag:aiyanabrooks.com,2019-04-04:/stock-tracker.html</id><summary type="html">&lt;p class="first last"&gt;A CLI tool to display a stock quote for a given stock symbol.&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;A simple command line interface to look up the stock quote of a given stock symbol&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example Usage&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt; stocktracker GOOG

Here are the stock prices on &lt;span class="m"&gt;2019&lt;/span&gt;-10-27:

Stock      &lt;span class="nv"&gt;Quote&lt;/span&gt;
&lt;span class="o"&gt;=========================&lt;/span&gt;
GOOG       &lt;span class="m"&gt;1265&lt;/span&gt;.1300

&amp;gt;&amp;gt; stocktracker GOOG AAPL FB

Here are the stock prices on &lt;span class="m"&gt;2019&lt;/span&gt;-10-27:

Stock      &lt;span class="nv"&gt;Quote&lt;/span&gt;
&lt;span class="o"&gt;=========================&lt;/span&gt;
GOOG       &lt;span class="m"&gt;1265&lt;/span&gt;.1300
AAPL       &lt;span class="m"&gt;246&lt;/span&gt;.5800
FB         &lt;span class="m"&gt;187&lt;/span&gt;.8900

&amp;gt;&amp;gt; stocktracker -a GOOG AAPL FB

Here are the stock prices on &lt;span class="m"&gt;2019&lt;/span&gt;-10-27:

Stock      &lt;span class="nv"&gt;Quote&lt;/span&gt;
&lt;span class="o"&gt;=========================&lt;/span&gt;
AAPL       &lt;span class="m"&gt;246&lt;/span&gt;.5800
FB         &lt;span class="m"&gt;187&lt;/span&gt;.8900
GOOG       &lt;span class="m"&gt;1265&lt;/span&gt;.1300
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Code&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Full &lt;a class="reference external" href="https://github.com/ariesunique/30-day-project-challenge/tree/master/stocktracker"&gt;source code&lt;/a&gt; in GitHub&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-i-learned"&gt;
&lt;h2&gt;What I Learned&lt;/h2&gt;
&lt;p&gt;I only worked on this for about 5 consecutive days in short bursts (but this could easily have been done in an hour or two on a single day). I chose this project because I like command-line interfaces and I wanted to work more with the Click library.&lt;/p&gt;
&lt;p&gt;The first step was to figure out how I would get the stock quotes. I found a nice site with a free API for this purpose - alphavantage. I signed up for a free API key and added this to my config file. I’m using configparser to read the config file. To make this into a true CLI, I added a setup.py file (so the code can be called with a simple command instead of having to type the “python” command to run this).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="assessment"&gt;
&lt;h2&gt;Assessment&lt;/h2&gt;
&lt;p&gt;I learned more about Click and ConfigParser, and how to create a setup.py file.
There is a lot more that could be added to make this more robust, but it works well enough as a simple CLI proof-of-concept. This was a fun little project and I plan to use Click again for future CLI tools.&lt;/p&gt;
&lt;/div&gt;
</content><category term="blog"></category><category term="30-day-project-challenge"></category></entry><entry><title>30 DAY PROJECT CHALLENGE</title><link href="https://aiyanabrooks.com/30-day-project-challenge.html" rel="alternate"></link><published>2019-04-01T17:20:00-04:00</published><updated>2019-04-01T17:20:00-04:00</updated><author><name>Aiyana</name></author><id>tag:aiyanabrooks.com,2019-04-01:/30-day-project-challenge.html</id><summary type="html">&lt;p class="first last"&gt;Each month I will tackle a different python project. The goal is to focus on the &lt;strong&gt;process&lt;/strong&gt; of learning, rather than on the project &lt;strong&gt;result&lt;/strong&gt;. To this end, I am not limiting myself in regards to the difficulty of the project (although, most of these projects will probably be something reasonable that can be accomplished in 30 days). My goal is simply to choose a project that interests me and to work on it daily for 30 days to see how far I get. If at the end, I've got a working product, great, if not, at least I would have learned something. At the end of the 30 days, I will begin a new project.&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="what-is-it"&gt;
&lt;h2&gt;What is it?&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;30 Day Project Challenge&lt;/strong&gt; is my commitment to working on a project of my choosing daily for 30 days. At the end of this time period, I will do a self-assessment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="why-do-it"&gt;
&lt;h2&gt;Why do it?&lt;/h2&gt;
&lt;p&gt;There are two pieces of advice I often hear given to developers interested in picking up a new skill:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;Work on something real&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Choose a real project (something that interests you). Doing tutorials is fun, but the real learning happens when you are forced to figure things out for yourself.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;Work incrementally&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;No one can train for a marathon in a single day. The way to climb a mountain is one step at a time. One of my favorite authors and one of the most prolific writers of all time, Stephen King, maintains the habit of writing daily for a set time period each day.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This challenge fulfills both of those goals.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-will-it-work"&gt;
&lt;h2&gt;How will it work?&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;I must create my own project. While I can use tutorials to assist, the goal is to develop my own thing, not just blindly follow tutorials.&lt;/li&gt;
&lt;li&gt;I must commit to working on this every day for at least 20 minutes (barring some sort of emergency).&lt;/li&gt;
&lt;li&gt;At the end of the 30 days, I will evaluate my progress, and then &lt;em&gt;move on to a new project&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;The self-assessment must answer the following questions:&lt;ol class="loweralpha"&gt;
&lt;li&gt;What did you learn?&lt;/li&gt;
&lt;li&gt;How far did you get?&lt;/li&gt;
&lt;li&gt;What were the roadblocks?&lt;/li&gt;
&lt;li&gt;What would you do differently?&lt;/li&gt;
&lt;li&gt;How do you feel about what you accomplished?&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="section" id="why-30-days"&gt;
&lt;h3&gt;Why 30 days?&lt;/h3&gt;
&lt;p&gt;This is key - this ensures that my learning doesn't stall. It is very easy to get stuck on a problem and feel unwilling to start anything new until the roadblock is solved. By setting the 30-day limit, I remain focused on the &lt;strong&gt;process&lt;/strong&gt; of learning, rather than on the &lt;strong&gt;result&lt;/strong&gt; (after all, I'm not trying to reinvent the wheel).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="let-s-get-started"&gt;
&lt;h2&gt;Let's get started?&lt;/h2&gt;
&lt;p&gt;I will be using this blog to keep track of my learning journey. Stay Tuned!!!&lt;/p&gt;
&lt;/div&gt;
</content><category term="blog"></category><category term="30-day-project-challenge"></category></entry></feed>